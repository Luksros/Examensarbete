// <auto-generated />
using System;
using Examensarbete.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examensarbete.Migrations
{
    [DbContext(typeof(alsDbContext))]
    [Migration("20230611162255_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examensarbete.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriveItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerPublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            DriveItemId = "FFAE75F410E7D5E9!116",
                            FileSize = 28778828,
                            LastEditedDate = new DateTime(2023, 6, 11, 18, 22, 55, 119, DateTimeKind.Local).AddTicks(4488),
                            OwnerPublicId = new Guid("34cfd964-7c00-433b-b6b1-f0c83ebe0fc4"),
                            ProjectFileName = "Dubstep Heater v12",
                            PublicId = new Guid("12a1369c-b61b-4059-a4f9-e04520f5f96e")
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            DriveItemId = "FFAE75F410E7D5E9!113",
                            FileSize = 11942208,
                            LastEditedDate = new DateTime(2023, 6, 11, 18, 22, 55, 119, DateTimeKind.Local).AddTicks(4507),
                            OwnerPublicId = new Guid("34cfd964-7c00-433b-b6b1-f0c83ebe0fc4"),
                            ProjectFileName = "Shitty Beat",
                            PublicId = new Guid("4806b9d4-a84f-4a9d-987b-3c9c56ec9983")
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            DriveItemId = "FFAE75F410E7D5E9!111",
                            FileSize = 27545588,
                            LastEditedDate = new DateTime(2023, 6, 11, 18, 22, 55, 119, DateTimeKind.Local).AddTicks(4523),
                            OwnerPublicId = new Guid("34cfd964-7c00-433b-b6b1-f0c83ebe0fc4"),
                            ProjectFileName = "We Ain't Makin It Out The Hood",
                            PublicId = new Guid("b1317e51-5c4d-4174-9165-79565b59acce")
                        });
                });

            modelBuilder.Entity("Examensarbete.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "testuser@email.com",
                            Password = "TestPassword",
                            PublicId = new Guid("34cfd964-7c00-433b-b6b1-f0c83ebe0fc4"),
                            Username = "TestUser"
                        },
                        new
                        {
                            Id = 2,
                            Email = "testcollaborator@email.com",
                            Password = "TestPassword",
                            PublicId = new Guid("c1514c79-5845-424f-9213-11343baf5b1c"),
                            Username = "TestCollaborator"
                        });
                });

            modelBuilder.Entity("Examensarbete.Models.User", b =>
                {
                    b.HasOne("Examensarbete.Models.Project", null)
                        .WithMany("Collaborators")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Examensarbete.Models.Project", b =>
                {
                    b.Navigation("Collaborators");
                });
#pragma warning restore 612, 618
        }
    }
}
